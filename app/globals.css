@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary: #ff6a3d;
  --primary-50: #fff0e9;
  --primary-100: #ffd8c7;
  --primary-200: #ffb899;
  --primary-300: #ff9a6f;
  --primary-400: #ff7f4d;
  --primary-500: #ff6a3d;
  --primary-600: #e05529;
  --primary-700: #c3471f;
  --neutral-50: #f6f7f9;
  --neutral-100: #eceff4;
  --neutral-200: #dfe3eb;
  --neutral-300: #cfd5e2;
  --neutral-400: #9ba3b7;
  --neutral-500: #6b7280;
  --neutral-900: #0f1222;
  --text: #0f1222;
  --surface: #ffffff;
  --muted: #f6f7f9;
  --muted-border: rgba(15, 18, 34, 0.08);
  --muted-text: rgba(15, 18, 34, 0.68);
  --success: #10b981;
  --warning: #f59e0b;
  --error: #dc2626;
  --white: #ffffff;
  --shadow-soft: 0 16px 40px -24px rgba(15, 18, 34, 0.16);
  --shadow-soft-lg: 0 24px 56px -28px rgba(15, 18, 34, 0.2);
  --mesh-a: 25deg;
  --mesh-b: 10deg;
  --mesh-alpha: 0.55;
  --mesh-shift-x: 0%;
  --mesh-shift-y: 0%;
  --mesh-noise: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='60' height='60'><filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.8' numOctaves='2' stitchTiles='stitch'/></filter><rect width='100%' height='100%' filter='url(%23n)' opacity='.04'/></svg>");
}

html,
body {
  height: 100%;
}

body {
  background: var(--muted);
  color: var(--text);
  font-family: var(--font-manrope), "Manrope", -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
}

.font-heading {
  font-family: var(--font-jost), "Jost", -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif;
}

.text-text {
  color: color-mix(in oklab, var(--text), black 4%);
}

.text-muted {
  color: var(--muted-text);
}

.text-warning {
  color: var(--warning);
}

.text-success {
  color: var(--success);
}

.bg-muted {
  background-color: var(--muted);
}

.bg-primary {
  background-color: var(--primary);
}

.bg-surface {
  background-color: var(--surface);
}

.shadow-soft {
  box-shadow: var(--shadow-soft);
}

.shadow-soft-lg {
  box-shadow: var(--shadow-soft-lg);
}

.hover\:shadow-soft-lg:hover {
  box-shadow: var(--shadow-soft-lg);
}

.section-divider {
  height: 1px;
  width: 100%;
  background: linear-gradient(90deg, transparent, rgba(15, 18, 34, 0.08), transparent);
}

.container-soft {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

@media (min-width: 1024px) {
  .container-soft {
    padding: 0 40px;
  }
}

:focus-visible {
  outline: 2px solid var(--primary);
  outline-offset: 2px;
}

.toast {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  bottom: 24px;
  background: rgba(15, 18, 34, 0.94);
  color: white;
  padding: 12px 20px;
  border-radius: 14px;
  box-shadow: 0 24px 48px -24px rgba(15, 18, 34, 0.45);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.24s ease, transform 0.24s ease;
  z-index: 70;
}

.toast--visible {
  opacity: 1;
  transform: translate(-50%, -4px);
}

.scroll-reveal {
  opacity: 0;
  transform: translateY(24px);
  animation: reveal 0.7s ease forwards;
}

@keyframes reveal {
  from {
    opacity: 0;
    transform: translateY(24px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@media (prefers-reduced-motion: reduce) {
  .scroll-reveal {
    animation: none;
    opacity: 1;
    transform: none;
  }
}

.hero-surface::before {
  content: "";
  position: absolute;
  inset: -30% -20% 30%;
  z-index: -1;
  background:
    radial-gradient(circle at 20% 20%, rgba(255, 106, 61, 0.45), transparent 58%),
    radial-gradient(circle at 80% 0%, rgba(255, 218, 189, 0.55), transparent 62%);
  filter: blur(120px);
  opacity: 0.85;
}

.card-skeleton {
  animation: pulse 1.8s ease-in-out infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.6;
  }
  50% {
    opacity: 1;
  }
}

/* ===== Fixed background layer ===== */
.site-bg {
  position: fixed;
  inset: 0;
  z-index: -1;
  pointer-events: none;
  background:
    radial-gradient(
      1200px 600px at calc(50% + var(--mesh-shift-x)) calc(10% + var(--mesh-shift-y)),
      color-mix(in oklab, var(--primary-200), white 22%) 0%,
      color-mix(in oklab, var(--primary-100), white 40%) 35%,
      transparent 70%
    ),
    radial-gradient(
      800px 500px at calc(20% - var(--mesh-shift-x)) calc(70% + var(--mesh-shift-y)),
      color-mix(in oklab, var(--primary-50), white 5%) 0%,
      transparent 60%
    ),
    conic-gradient(
      from 210deg at 60% 30%,
      color-mix(in oklab, var(--primary-300), white 30%) 0deg,
      color-mix(in oklab, var(--primary-200), white 40%) 100deg,
      color-mix(in oklab, var(--primary-100), white 50%) 220deg,
      transparent 360deg
    );
  background-color: var(--neutral-50);
  mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.95) 10%, rgba(0, 0, 0, 0.9) 60%, rgba(0, 0, 0, 0.96));
  animation: meshFloat 22s ease-in-out infinite alternate;
}

@media (prefers-reduced-motion: reduce) {
  .site-bg {
    animation: none;
  }
}

@keyframes meshFloat {
  0% {
    --mesh-shift-x: -6%;
    --mesh-shift-y: 0%;
  }
  50% {
    --mesh-shift-x: 4%;
    --mesh-shift-y: 3%;
  }
  100% {
    --mesh-shift-x: -2%;
    --mesh-shift-y: -2%;
  }
}

/* ===== Section overlays ===== */
.section-wrap {
  position: relative;
}

.section-wrap::before {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  pointer-events: none;
  opacity: 0;
  transition: opacity 0.35s ease;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0.85), rgba(255, 255, 255, 0.92));
  mask-image:
    radial-gradient(80% 120% at 50% -10%, rgba(0, 0, 0, 0.25), transparent 60%),
    linear-gradient(#000, #000);
  mask-composite: exclude;
}

.section-muted::before {
  opacity: 1;
}

.section-soft::before {
  opacity: 1;
  background: linear-gradient(
    to bottom,
    color-mix(in oklab, var(--primary-50), white 70%),
    rgba(255, 255, 255, 0.95)
  );
}

.section-wrap[data-bg-shift="1"] {
  --mesh-shift-x: 3%;
  --mesh-shift-y: 1%;
}

.section-wrap[data-bg-shift="2"] {
  --mesh-shift-x: -4%;
  --mesh-shift-y: 2%;
}

.section-wrap[data-bg-shift="3"] {
  --mesh-shift-x: 2%;
  --mesh-shift-y: -1%;
}

.section-wrap[data-bg-shift="4"] {
  --mesh-shift-x: -2%;
  --mesh-shift-y: -3%;
}

/* noise glaze */
:root[data-bgready="true"] body::after {
  content: "";
  position: fixed;
  inset: -1px;
  z-index: -1;
  pointer-events: none;
  background-image: var(--mesh-noise);
  background-size: 260px 260px;
  opacity: 0.4;
  mix-blend-mode: soft-light;
}

@media (prefers-reduced-motion: reduce) {
  :root[data-bgready="true"] body::after {
    opacity: 0.25;
  }
}
